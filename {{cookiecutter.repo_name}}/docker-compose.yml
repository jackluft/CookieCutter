version: '3'
services:
  postgres:
    image: postgres:latest
    container_name: my_postgres
    environment:
      POSTGRES_USER: {{cookiecutter.postgres_user}}
      POSTGRES_PASSWORD: {{cookiecutter.postgres_password}}
      POSTGRES_DB: {{postgres_db}}
    ports:
      - "{{cookiecutter.postgres_port}}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-U", "postgres"]
      interval: 5s
      timeout: 1s
      retries: 2

  flyway:
    image: flyway/flyway:10.4.1
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - FLYWAY_URL=jdbc:postgresql://postgres:5432/{{postgres_db}}
      - FLYWAY_USER={{cookiecutter.postgres_user}}
      - FLYWAY_PASSWORD={{cookiecutter.postgres_password}}
      - FLYWAY_SCHEMAS=public
      - FLYWAY_BASELINE_ON_MIGRATE=true
    command: migrate
    volumes:
      - ./sql:/flyway/sql

  fastapi_app:
    build:
      context: .
      dockerfile: Dockerfile  # Assuming your Dockerfile is in the same directory as your app.py
    container_name: my_fastapi_app
    restart: always
    depends_on:
      - postgres
    environment:
      PORT: 80
      POSTGRES_HOST: postgres
      POSTGRES_PORT: {{cookiecutter.postgres_port}}
      POSTGRES_USERNAME: {{cookiecutter.postgres_user}}
      POSTGRES_PASSWORD: {{cookiecutter.postgres_password}}
      POSTGRES_DB_NAME: {{postgres_db}}
    ports:
      - "{{cookiecutter.api_port}}:80"

volumes:
  postgres_data:

